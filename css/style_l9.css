*{
	padding: 0;
	margin: 0;
	border: 0;
}
*,*:before,*:after{
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
:focus,:active{outline: none;}
a:focus,a:active{outline: none;}

nav,footer,header,aside{display: block;}

html,body{
	height: 100%;
	width: 100%;
	font-size: 100%;
	line-height: 1;
	font-size: 14px;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}
input,button,textarea{font-family:inherit;}

input::-ms-clear{display: none;}
button{cursor: pointer;}
button::-moz-focus-inner {padding:0;border:0;}
a, a:visited{text-decoration: none;}
a:hover{text-decoration: none;}
ul li{list-style: none;}
img{vertical-align: top;}

h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight: 400;}
/**/

body{
    padding: 30px;
}

.block_el{
    margin-bottom: 30px;
}

.block_el p{
    font-size: 18px;
    line-height: 24px;
    margin-bottom: 20px;
}

.block_el:hover{
    background-color: rgb(14, 87, 63);
    border-radius: 25px;
    border: 2px solid #d89610;
    text-decoration: underline;
    color: #b9aa8f;
    font-style: italic;
    text-shadow: 1px 0px 1px #c3891c;
    padding: 20px 10px 50px;
}

.block_el:active{  /*active - псевдокласс, что срабатывает при клике*/
    color: #ddb350;
}

.link{
    color: brown;
}

.link:visited{  /*visited - псевдокласс, что срабатывает для посещенных ссылок*/
    color: aquamarine;
}

.link:hover{  /*hover - псевдокласс, что срабатывает при наведении курсора*/
    color: #c3891c;
    text-decoration: overline underline;
}

.text_input{
    border: 2px solid #534545;
    border-radius: 30px;
    height: 50px;
    width: 300px;
    font-size: 18px;
    padding: 0px 15px;
    margin-bottom: 10px;
}

.text_input:focus{  /*focus - псевдокласс, что срабатывает при фокусе на элементе*/
    animation: input_color 3s infinite linear;
}

@keyframes input_color{
    0%{
        border: 4px solid #82211a;
    }
    25%{
        border: 4px solid #ac491b;
    }
    50%{
        border: 4px solid #d89610;
    }
    75%{
        border: 4px solid #1a6e12;
    }
    100%{
        border: 4px solid #1d47d3;
    }
}

.text_button{
    display: block;
    height: 50px;
    width: 300px;
    background-color: rgb(191, 117, 6);
    font-size: 18px;
    text-transform: uppercase;
    border-radius: 25px;
    box-shadow: 1px 6px 2px #534545;
    margin-bottom: 30px;
}

.text_button:active{
    pointer-events: none;
    box-shadow: none;
    background-color: #1a6e12;
}

.text_button:hover{
    animation: button_effect 1s infinite linear;
}

@keyframes button_effect{
    0%{
        background-color: #1d47d3;
        text-transform: lowercase;
        color: #dde804;
    }
    100%{
        background-color: #82211a;
        text-transform: uppercase;
        color: #dde804;
    }
}

.list li{
    font-size: 18px;
    margin-bottom: 15px;
}

.list li:first-child{  /*first-child - псевдокласс, что обращается к первому элементу блока*/
    text-decoration: overline;
}

li:last-child{  /*last-child - псевдокласс, что обращается к последнему элементу блока*/
    text-decoration: underline;
}

li{
    animation: li_color 2s infinite linear;
}

@keyframes li_color{
    0%{
        color: #82211a;
    }
    25%{
        color: #ac491b;
    }
    50%{
        color: #d89610;
    }
    75%{
        color: #1a6e12;
    }
    100%{
        color: #1d47d3;
    }
}

li:nth-child(1){  /*nth-child - псевдокласс, что обращается к конкретному элементу блока*/
    animation-delay: 0s;
}
li:nth-child(2){
    animation-delay: 0.4s;
}
li:nth-child(3){
    animation-delay: 0.8s;
}
li:nth-child(4){
    animation-delay: 1.2s;
}
li:nth-child(5){
    animation-delay: 1.6s;
}

li:nth-child(odd){  /*Принимает разные значения: odd - нечетные элементы, even - четные*/
    text-transform: uppercase;
}

li:nth-child(even){
    text-transform: lowercase;
    text-decoration: line-through;
}

/*Псевдоклассы можно комбинировать*/
li:nth-child(odd):hover{
    text-transform: lowercase;
}

li:nth-child(even):hover{
    text-transform: uppercase;
}

/*
Исключение для first/last/nth-child псевдоклассов:
если перед/после первого/последнего тега p в родительском классе block_el будет стоять какой-либо другой тег, заданый параметр работать не будет
*/
.block_el p:last-child{
    text-transform: uppercase;
}